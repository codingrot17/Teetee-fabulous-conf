/* Enhanced TEETEE FABULOUS JavaScript - CART FIXED VERSION */

// ===== STATE MANAGEMENT =====
const AppState = {
    products: [],
    filteredProducts: [],
    categories: [],
    cart: [],
    currentFilter: 'all',
    searchQuery: '',
    currentProduct: null,
    countersAnimated: false,
    skillsAnimated: false
};

// ===== INITIALIZE ON DOM READY =====
$(document).ready(function() {
    console.log('DOM Ready - Starting initialization...');
    initializeApp();
});

// ===== MAIN INITIALIZATION =====
function initializeApp() {
    console.log('Initializing TEETEE FABULOUS app...');
    initializePreloader();
    initializeNavigation();
    initializeScrollEffects();
    initializeHero();
    initializeProducts();
    initializeAnimations();
    initializeContactForm();
    initializeNewsletter();
    initializeModal();
    initializeCart();
    
    console.log('TEETEE FABULOUS initialized successfully!');
}

// ===== PRELOADER =====
function initializePreloader() {
    $(window).on('load', function() {
        setTimeout(function() {
            $('#preloader').addClass('fade-out');
            setTimeout(function() {
                $('#preloader').remove();
            }, 500);
        }, 1000);
    });
    
    setTimeout(function() {
        if ($('#preloader').length) {
            $('#preloader').addClass('fade-out');
        }
    }, 5000);
}

// ===== NAVIGATION =====
function initializeNavigation() {
    $('#menuBtn').click(function(e) {
        e.preventDefault();
        var menu = $('#navMenu');
        var icon = $(this).find('i');
        
        menu.toggleClass('active');
        
        if (menu.hasClass('active')) {
            icon.removeClass('fa-bars').addClass('fa-times active');
            $('body').css('overflow', 'hidden');
        } else {
            icon.removeClass('fa-times active').addClass('fa-bars');
            $('body').css('overflow', 'auto');
        }
    });

    $('.menu-link').click(function() {
        $('#navMenu').removeClass('active');
        $('#menuBtn i').removeClass('fa-times active').addClass('fa-bars');
        $('body').css('overflow', 'auto');
    });

    $('a[href^="#"]').on('click', function(e) {
        var href = $(this).attr('href');
        if (href === '#' || href === '#!') {
            e.preventDefault();
            return false;
        }
        
        e.preventDefault();
        var target = $(href);
        
        if (target.length) {
            $('html, body').animate({
                scrollTop: target.offset().top - 80
            }, 800, 'swing');
        }
    });
}

// ===== SCROLL EFFECTS =====
function initializeScrollEffects() {
    var navbar = $('#navbar');
    var scrollUpBtn = $('#scrollUpBtn');
    
    $(window).scroll(function() {
        var scrollY = $(this).scrollTop();
        
        if (scrollY > 20) {
            navbar.addClass('sticky');
        } else {
            navbar.removeClass('sticky');
        }
        
        if (scrollY > 500) {
            scrollUpBtn.addClass('show');
        } else {
            scrollUpBtn.removeClass('show');
        }
        
        updateActiveNav();
        animateOnScroll();
        
        if (!AppState.countersAnimated && isInViewport($('.stats-row'))) {
            animateCounters();
            AppState.countersAnimated = true;
        }
        
        if (!AppState.skillsAnimated && isInViewport($('.skills'))) {
            animateSkillBars();
            AppState.skillsAnimated = true;
        }
    });

    scrollUpBtn.click(function(e) {
        e.preventDefault();
        $('html, body').animate({ scrollTop: 0 }, 1000, 'swing');
        return false;
    });
}

function updateActiveNav() {
    var scrollPos = $(window).scrollTop() + 100;
    
    $('section[id]').each(function() {
        var section = $(this);
        var sectionTop = section.offset().top;
        var sectionBottom = sectionTop + section.outerHeight();
        var sectionId = section.attr('id');
        
        if (scrollPos >= sectionTop && scrollPos < sectionBottom) {
            $('.menu-link').removeClass('active');
            $('.menu-link[href="#' + sectionId + '"]').addClass('active');
        }
    });
}

// ===== HERO SECTION =====
function initializeHero() {
    if (typeof Typed !== 'undefined') {
        new Typed(".typing", {
            strings: [
                "CONFECTIONARY INT'L", 
                "CATERING SERVICES", 
                "EVENT PLANNING", 
                "CUSTOM CAKE DESIGNS",
                "PREMIUM BAKERY"
            ],
            typeSpeed: 100,
            backSpeed: 60,
            backDelay: 1500,
            loop: true
        });
    }

    $(window).scroll(function() {
        var scrolled = $(window).scrollTop();
        $('.home').css('background-position', 'center ' + (scrolled * 0.5) + 'px');
    });
}

// ===== PRODUCTS =====
function initializeProducts() {
    var searchTimeout;
    $('#productSearch').on('input', function() {
        clearTimeout(searchTimeout);
        AppState.searchQuery = $(this).val().toLowerCase().trim();
        
        if (AppState.searchQuery) {
            $('#searchClear').addClass('show');
        } else {
            $('#searchClear').removeClass('show');
        }
        
        searchTimeout = setTimeout(function() {
            filterProducts();
        }, 300);
    });

    $('#searchClear').click(function(e) {
        e.preventDefault();
        $('#productSearch').val('');
        AppState.searchQuery = '';
        $(this).removeClass('show');
        filterProducts();
    });

    $(document).on('click', '.filter-btn', function(e) {
        e.preventDefault();
        AppState.currentFilter = $(this).data('filter');
        $('.filter-btn').removeClass('active');
        $(this).addClass('active');
        filterProducts();
    });

    $('#clearFilters').click(function(e) {
        e.preventDefault();
        $('#productSearch').val('');
        $('#searchClear').removeClass('show');
        AppState.searchQuery = '';
        AppState.currentFilter = 'all';
        $('.filter-btn').removeClass('active');
        $('.filter-btn[data-filter="all"]').addClass('active');
        filterProducts();
    });

    $(document).on('click', '.quick-view-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var productId = $(this).data('product');
        showProductModal(productId);
    });

    $(document).on('click', '.add-to-cart-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var productId = $(this).data('product');
        addToCart(productId);
    });

    $(document).on('click', '.buy-now-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var productId = $(this).data('product');
        initiateOrder(productId);
    });
}

function loadDynamicProducts() {
    return new Promise(function(resolve, reject) {
        try {
            showProductsLoading(true);
            
            if (!window.productService) {
                console.warn('Product service not available, loading sample products');
                loadSampleProducts();
                resolve();
                return;
            }

            Promise.all([
                window.productService.getProducts(),
                window.productService.getCategories()
            ]).then(function(results) {
                var productsResult = results[0];
                var categoriesResult = results[1];
                
                AppState.products = productsResult.documents || [];
                AppState.categories = categoriesResult.documents || [];
                AppState.filteredProducts = AppState.products.slice();

                if (AppState.products.length > 0) {
                    updateCategoryFilters();
                    renderProducts();
                    showNotification('Loaded ' + AppState.products.length + ' products!', 'success');
                } else {
                    loadSampleProducts();
                }
                
                resolve();
            }).catch(function(error) {
                console.error('Error loading products:', error);
                showNotification('Loading sample products...', 'info');
                loadSampleProducts();
                resolve();
            });
            
        } catch (error) {
            console.error('Error in loadDynamicProducts:', error);
            loadSampleProducts();
            resolve();
        } finally {
            showProductsLoading(false);
        }
    });
}

window.loadDynamicProducts = loadDynamicProducts;

function updateCategoryFilters() {
    var container = $('#categoryFilters');
    container.find('.filter-btn:not([data-filter="all"])').remove();
    
    AppState.categories.forEach(function(category) {
        var btn = $('<button class="filter-btn" data-filter="' + category.name.toLowerCase() + '">' + category.name + '</button>');
        container.append(btn);
    });
}

function filterProducts() {
    AppState.filteredProducts = AppState.products.filter(function(product) {
        var matchesSearch = !AppState.searchQuery || 
            product.name.toLowerCase().includes(AppState.searchQuery) ||
            product.description.toLowerCase().includes(AppState.searchQuery) ||
            product.category.toLowerCase().includes(AppState.searchQuery);

        var matchesCategory = AppState.currentFilter === 'all' || 
            product.category.toLowerCase() === AppState.currentFilter;

        return matchesSearch && matchesCategory;
    });

    renderProducts();
}

function renderProducts() {
    var grid = $('#productsGrid');
    var noResults = $('#noResults');
    
    grid.find('.products-loading').remove();
    grid.find('.product-card').remove();
    
    if (AppState.filteredProducts.length === 0) {
        grid.hide();
        noResults.addClass('show');
        return;
    }
    
    noResults.removeClass('show');
    grid.show();
    
    AppState.filteredProducts.forEach(function(product, index) {
        var card = createProductCard(product);
        grid.append(card);
        
        setTimeout(function() {
            card.addClass('show');
        }, index * 50);
    });
}

function createProductCard(product) {
    var imageUrl = (product.imageUrls && product.imageUrls[0]) ? 
        product.imageUrls[0] : 
        'https://via.placeholder.com/400x300/f3f4f6/9ca3af?text=No+Image';
    
    var price = window.productService ? 
        window.productService.formatPrice(product.price) : 
        '₦' + (product.price ? product.price.toLocaleString() : '0');
    
    var categoryColor = getCategoryColor(product.category);
    var productId = product.$id || product.id;
    
    var cardHtml = '<div class="product-card" data-category="' + product.category.toLowerCase() + '" data-product-id="' + productId + '">' +
        '<div class="product-image">' +
            '<img src="' + imageUrl + '" alt="' + product.name + '" loading="lazy">' +
            '<div class="product-overlay">' +
                '<div class="overlay-buttons">' +
                    '<button class="quick-view-btn" data-product="' + productId + '" title="Quick View">' +
                        '<i class="fas fa-eye"></i>' +
                    '</button>' +
                    '<button class="add-to-cart-btn" data-product="' + productId + '" title="Add to Cart">' +
                        '<i class="fas fa-shopping-cart"></i>' +
                    '</button>' +
                '</div>' +
            '</div>' +
            '<div class="product-badge" style="background: ' + categoryColor + '">' + product.category + '</div>' +
        '</div>' +
        '<div class="product-info">' +
            '<h3 class="product-title">' + product.name + '</h3>' +
            '<p class="product-description">' + truncateText(product.description, 100) + '</p>' +
            '<div class="product-price">' + price + '</div>' +
            '<button class="buy-now-btn" data-product="' + productId + '">' +
                '<i class="fas fa-shopping-cart"></i>' +
                'Order Now' +
            '</button>' +
        '</div>' +
    '</div>';
    
    return $(cardHtml);
}

function getCategoryColor(category) {
    var colors = {
        premium: 'linear-gradient(135deg, #D4A574, #f39c12)',
        vip: 'linear-gradient(135deg, #8B4A87, #c44569)',
        special: 'linear-gradient(135deg, #e74c3c, #c0392b)'
    };
    return colors[category.toLowerCase()] || 'linear-gradient(135deg, #6b7280, #9ca3af)';
}

function showProductsLoading(show) {
    if (show) {
        $('#productsLoading').show();
    } else {
        $('#productsLoading').hide();
    }
}

function loadSampleProducts() {
    AppState.products = [
        {
            id: 'sample1',
            name: 'Premium Vanilla Cake',
            description: 'Rich vanilla sponge with premium cream frosting and delicate decorations. Perfect for birthdays and special occasions.',
            price: 15000,
            category: 'Premium',
            imageUrls: ['https://images.unsplash.com/photo-1578985545062-69928b1d9587?w=400&h=300&fit=crop']
        },
        {
            id: 'sample2',
            name: 'VIP Chocolate Supreme',
            description: 'Luxurious chocolate masterpiece with gold accents and premium Belgian chocolate.',
            price: 28000,
            category: 'VIP',
            imageUrls: ['https://images.unsplash.com/photo-1606890737304-57a1ca8a5b62?w=400&h=300&fit=crop']
        },
        {
            id: 'sample3',
            name: 'Special Red Velvet',
            description: 'Artisan red velvet with unique decorations and cream cheese frosting.',
            price: 22000,
            category: 'Special',
            imageUrls: ['https://images.unsplash.com/photo-1586788680434-30d324b2d46f?w=400&h=300&fit=crop']
        },
        {
            id: 'sample4',
            name: 'Wedding Elegance',
            description: 'Multi-tier wedding cake with elegant floral decorations.',
            price: 85000,
            category: 'VIP',
            imageUrls: ['https://images.unsplash.com/photo-1519915028121-7d3463d20b13?w=400&h=300&fit=crop']
        },
        {
            id: 'sample5',
            name: 'Birthday Special',
            description: 'Colorful birthday cake with custom decorations.',
            price: 18000,
            category: 'Special',
            imageUrls: ['https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=300&fit=crop']
        },
        {
            id: 'sample6',
            name: 'Corporate Event Cake',
            description: 'Professional cake design perfect for corporate events.',
            price: 35000,
            category: 'Premium',
            imageUrls: ['https://images.unsplash.com/photo-1621303837174-89787a7d4729?w=400&h=300&fit=crop']
        }
    ];
    
    AppState.filteredProducts = AppState.products.slice();
    renderProducts();
    showNotification('Sample products loaded successfully!', 'info');
}

// ===== MODAL =====
function initializeModal() {
    $('#modalClose').click(function(e) {
        e.preventDefault();
        closeModal();
    });
    
    $('#productModal').click(function(e) {
        if (e.target === this) {
            closeModal();
        }
    });
    
    $(document).keydown(function(e) {
        if (e.key === 'Escape' && $('#productModal').hasClass('show')) {
            closeModal();
        }
    });
    
    $('#modalOrderBtn').click(function(e) {
        e.preventDefault();
        if (AppState.currentProduct) {
            initiateOrder(AppState.currentProduct.$id || AppState.currentProduct.id);
            closeModal();
        }
    });
    
    $('#modalAddCartBtn').click(function(e) {
        e.preventDefault();
        if (AppState.currentProduct) {
            addToCart(AppState.currentProduct.$id || AppState.currentProduct.id);
        }
    });
}

function showProductModal(productId) {
    var product = AppState.products.find(function(p) {
        return (p.$id || p.id) === productId;
    });
    
    if (!product) {
        showNotification('Product not found', 'error');
        return;
    }

    AppState.currentProduct = product;
    
    var imageUrl = (product.imageUrls && product.imageUrls[0]) ? 
        product.imageUrls[0] : 
        'https://via.placeholder.com/600x400';
    
    var price = window.productService ? 
        window.productService.formatPrice(product.price) : 
        '₦' + product.price.toLocaleString();
    
    $('#modalTitle').text(product.name);
    $('#modalImage').attr('src', imageUrl).attr('alt', product.name);
    $('#modalCategory').text(product.category).css('background', getCategoryColor(product.category));
    $('#modalPrice').text(price);
    $('#modalDescription').text(product.description);
    
    $('#productModal').addClass('show');
    $('body').css('overflow', 'hidden');
}

function closeModal() {
    $('#productModal').removeClass('show');
    $('body').css('overflow', 'auto');
    AppState.currentProduct = null;
}

// ===== CART MANAGEMENT - COMPLETELY FIXED =====
function initializeCart() {
    console.log('Initializing cart system...');
    
    // Load cart from storage if available
    loadCartFromStorage();
    updateCartCounter();
    updateCartDisplay();
    
    // FIXED: Multiple robust click handlers
    // Method 1: Direct element binding after short delay
    setTimeout(function() {
        $('#cartLink, #mobileCartLink, .cart-link').off('click').on('click', function(e) {
            console.log('Cart link clicked (direct binding)!');
            e.preventDefault();
            e.stopPropagation();
            openCart();
            return false;
        });
        console.log('Direct cart click handlers attached');
    }, 100);
    
    // Method 2: Event delegation on document
    $(document).off('click', '#cartLink, #mobileCartLink, .cart-link').on('click', '#cartLink, #mobileCartLink, .cart-link', function(e) {
        console.log('Cart link clicked (document delegation)!');
        e.preventDefault();
        e.stopPropagation();
        openCart();
        return false;
    });
    
    // Method 3: Click on cart icon specifically
    $(document).off('click', '.fa-shopping-cart').on('click', '.fa-shopping-cart', function(e) {
        console.log('Cart icon clicked (icon delegation)!');
        e.preventDefault();
        e.stopPropagation();
        var link = $(this).closest('a');
        if (link.length) {
            openCart();
        }
        return false;
    });
    
    // Method 4: Click on mobile actions container
    $(document).off('click', '.mobile-cart, .desktop-cart').on('click', '.mobile-cart, .desktop-cart', function(e) {
        console.log('Cart container clicked!');
        e.preventDefault();
        e.stopPropagation();
        openCart();
        return false;
    });
    
    // Close cart handlers
    $(document).on('click', '#cartCloseBtn', function(e) {
        console.log('Close cart clicked');
        e.preventDefault();
        closeCart();
    });
    
    $(document).on('click', '#cartOverlay', function(e) {
        if (e.target === this) {
            console.log('Overlay clicked');
            closeCart();
        }
    });
    
    // Checkout button
    $(document).on('click', '#checkoutBtn', function(e) {
        e.preventDefault();
        checkout();
    });
    
    // Cart item controls
    $(document).on('click', '.quantity-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var productId = $(this).data('product');
        var action = $(this).data('action');
        updateQuantity(productId, action);
    });
    
    $(document).on('click', '.remove-item-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var productId = $(this).data('product');
        removeFromCart(productId);
    });
    
    // Keyboard support
    $(document).keydown(function(e) {
        if (e.key === 'Escape' && $('#cartSidebar').hasClass('active')) {
            closeCart();
        }
    });
    
    console.log('Cart system initialized successfully ✓');
}

function loadCartFromStorage() {
    try {
        var savedCart = localStorage.getItem('teetee_cart');
        if (savedCart) {
            AppState.cart = JSON.parse(savedCart);
            console.log('Cart loaded from storage:', AppState.cart.length, 'items');
        }
    } catch (error) {
        console.error('Error loading cart from storage:', error);
    }
}

function saveCartToStorage() {
    try {
        localStorage.setItem('teetee_cart', JSON.stringify(AppState.cart));
    } catch (error) {
        console.error('Error saving cart to storage:', error);
    }
}

function openCart() {
    console.log('Opening cart sidebar...');
    $('#cartSidebar').addClass('active');
    $('#cartOverlay').addClass('active');
    $('body').css('overflow', 'hidden');
    updateCartDisplay();
    showNotification('Cart opened - ' + AppState.cart.length + ' items', 'info', 2000);
}

function closeCart() {
    console.log('Closing cart sidebar...');
    $('#cartSidebar').removeClass('active');
    $('#cartOverlay').removeClass('active');
    $('body').css('overflow', 'auto');
}

function addToCart(productId) {
    console.log('Adding product to cart:', productId);
    
    var product = AppState.products.find(function(p) {
        return (p.$id || p.id) === productId;
    });
    
    if (!product) {
        showNotification('Product not found', 'error');
        return;
    }

    var existingItem = AppState.cart.find(function(item) {
        return item.id === productId;
    });
    
    if (existingItem) {
        existingItem.quantity += 1;
        showNotification(product.name + ' quantity increased to ' + existingItem.quantity, 'success');
    } else {
        AppState.cart.push({
            id: productId,
            name: product.name,
            price: product.price,
            image: (product.imageUrls && product.imageUrls[0]) ? product.imageUrls[0] : 'https://via.placeholder.com/80x80',
            category: product.category,
            quantity: 1
        });
        showNotification(product.name + ' added to cart!', 'success');
    }
    
    saveCartToStorage();
    updateCartCounter();
    updateCartDisplay();
    
    // Bounce animation
    $('#cartCounter, #mobileCartCounter').css('animation', 'pulse 0.6s ease');
    setTimeout(function() {
        $('#cartCounter, #mobileCartCounter').css('animation', '');
    }, 600);
}

function removeFromCart(productId) {
    var item = AppState.cart.find(function(item) {
        return item.id === productId;
    });
    var itemName = item ? item.name : 'Item';
    
    AppState.cart = AppState.cart.filter(function(item) {
        return item.id !== productId;
    });
    
    saveCartToStorage();
    updateCartCounter();
    updateCartDisplay();
    showNotification(itemName + ' removed from cart', 'info');
}

function updateQuantity(productId, action) {
    var item = AppState.cart.find(function(item) {
        return item.id === productId;
    });
    
    if (!item) return;
    
    if (action === 'increase') {
        item.quantity += 1;
        showNotification(item.name + ' quantity increased', 'success');
    } else if (action === 'decrease') {
        item.quantity -= 1;
        if (item.quantity <= 0) {
            removeFromCart(productId);
            return;
        }
        showNotification(item.name + ' quantity decreased', 'info');
    }
    
    saveCartToStorage();
    updateCartCounter();
    updateCartDisplay();
}

function updateCartCounter() {
    var totalItems = AppState.cart.reduce(function(sum, item) {
        return sum + item.quantity;
    }, 0);
    
    var counters = $('#cartCounter, #mobileCartCounter');
    
    if (totalItems > 0) {
        counters.text(totalItems).addClass('show');
    } else {
        counters.removeClass('show').text('0');
    }
    
    console.log('Cart counter updated:', totalItems, 'items');
}

function updateCartDisplay() {
    console.log('Updating cart display...', AppState.cart.length, 'items');
    
    var cartItemsList = $('#cartItemsList');
    var cartFooter = $('#cartFooter');
    
    if (AppState.cart.length === 0) {
        cartItemsList.html(
            '<div class="empty-cart">' +
                '<i class="fas fa-shopping-cart"></i>' +
                '<h4>Your cart is empty</h4>' +
                '<p>Add some delicious cakes to get started!</p>' +
                '<button class="btn-secondary" onclick="closeCart(); $(\'html, body\').animate({scrollTop: $(\'#products\').offset().top - 80}, 800);">' +
                    '<i class="fas fa-birthday-cake"></i>' +
                    'Browse Cakes' +
                '</button>' +
            '</div>'
        );
        cartFooter.hide();
        return;
    }
    
    cartFooter.show();
    
    var cartHTML = '';
    AppState.cart.forEach(function(item) {
        var price = window.productService ? 
            window.productService.formatPrice(item.price) : 
            '₦' + item.price.toLocaleString();
        
        var itemTotal = window.productService ? 
            window.productService.formatPrice(item.price * item.quantity) : 
            '₦' + (item.price * item.quantity).toLocaleString();
        
        cartHTML += 
            '<div class="cart-item" data-product-id="' + item.id + '">' +
                '<div class="cart-item-image">' +
                    '<img src="' + item.image + '" alt="' + item.name + '">' +
                '</div>' +
                '<div class="cart-item-details">' +
                    '<div class="cart-item-title">' + item.name + '</div>' +
                    '<div class="cart-item-category">' + item.category + '</div>' +
                    '<div class="cart-item-price">' + itemTotal + '</div>' +
                    '<div class="cart-item-controls">' +
                        '<button class="quantity-btn" data-product="' + item.id + '" data-action="decrease" title="Decrease quantity">' +
                            '<i class="fas fa-minus"></i>' +
                        '</button>' +
                        '<span class="quantity-display">' + item.quantity + '</span>' +
                        '<button class="quantity-btn" data-product="' + item.id + '" data-action="increase" title="Increase quantity">' +
                            '<i class="fas fa-plus"></i>' +
                        '</button>' +
                        '<button class="remove-item-btn" data-product="' + item.id + '" title="Remove item">' +
                            '<i class="fas fa-trash"></i>' +
                        '</button>' +
                    '</div>' +
                '</div>' +
            '</div>';
    });
    
    cartItemsList.html(cartHTML);
    
    var total = getCartTotal();
    var formattedTotal = window.productService ? 
        window.productService.formatPrice(total) : 
        '₦' + total.toLocaleString();
    
    $('#cartSubtotal').text(formattedTotal);
    $('#cartTotal').text(formattedTotal);
}

function getCartTotal() {
    return AppState.cart.reduce(function(sum, item) {
        return sum + (item.price * item.quantity);
    }, 0);
}

function clearCart() {
    AppState.cart = [];
    saveCartToStorage();
    updateCartCounter();
    updateCartDisplay();
    showNotification('Cart cleared', 'info');
}

function checkout() {
    if (AppState.cart.length === 0) {
        showNotification('Your cart is empty', 'error');
        return;
    }
    
    closeCart();
    
    $('html, body').animate({
        scrollTop: $('#contact').offset().top - 80
    }, 1000, 'swing');
    
    setTimeout(function() {
        var total = getCartTotal();
        var formattedTotal = window.productService ? 
            window.productService.formatPrice(total) : 
            '₦' + total.toLocaleString();
        
        var orderDetails = 'I would like to order the following items:\n\n';
        AppState.cart.forEach(function(item, index) {
            var itemPrice = window.productService ? 
                window.productService.formatPrice(item.price) : 
                '₦' + item.price.toLocaleString();
            var itemTotal = window.productService ? 
                window.productService.formatPrice(item.price * item.quantity) : 
                '₦' + (item.price * item.quantity).toLocaleString();
            orderDetails += (index + 1) + '. ' + item.name + '\n   Price: ' + itemPrice + ' × ' + item.quantity + ' = ' + itemTotal + '\n\n';
        });
        orderDetails += 'TOTAL: ' + formattedTotal + '\n\nPlease contact me to complete this order. Thank you!';
        
        $('#contactService').val('cake-order');
        $('#contactMessage').val(orderDetails);
        
        $('#contactForm').addClass('highlight');
        setTimeout(function() {
            $('#contactForm').removeClass('highlight');
        }, 3000);
        
        showNotification('Please fill out the contact form to complete your order.', 'info');
    }, 1200);
}

function initiateOrder(productId) {
    var product = AppState.products.find(function(p) {
        return (p.$id || p.id) === productId;
    });
    
    if (!product) {
        showNotification('Product not found', 'error');
        return;
    }

    addToCart(productId);
    
    setTimeout(function() {
        $('html, body').animate({
            scrollTop: $('#contact').offset().top - 80
        }, 1000, 'swing');
        
        setTimeout(function() {
            var price = window.productService ? 
                window.productService.formatPrice(product.price) : 
                '₦' + product.price.toLocaleString();
                
            $('#contactService').val('cake-order');
            $('#contactMessage').val(
                'I would like to order: ' + product.name + '\nPrice: ' + price + '\n\nPlease contact me with more details about this order. Thank you!'
            );
            
            $('#contactForm').addClass('highlight');
            setTimeout(function() {
                $('#contactForm').removeClass('highlight');
            }, 3000);
            
            showNotification('Please fill out the contact form to complete your order.', 'info');
        }, 1200);
    }, 1500);
}

// ===== CONTACT FORM =====
function initializeContactForm() {
    $('#contactForm').submit(function(e) {
        e.preventDefault();
        
        var formData = {
            name: $('#contactName').val().trim(),
            email: $('#contactEmail').val().trim(),
            phone: $('#contactPhone').val().trim(),
            service: $('#contactService').val(),
            message: $('#contactMessage').val().trim()
        };
        
        if (validateContactForm(formData)) {
            submitContactForm(formData);
        }
    });
}

function validateContactForm(data) {
    var errors = [];
    
    if (!data.name || data.name.length < 2) {
        errors.push('Please enter a valid name');
    }
    if (!validateEmail(data.email)) {
        errors.push('Please enter a valid email address');
    }
    if (!data.phone || data.phone.length < 10) {
        errors.push('Please enter a valid phone number');
    }
    if (!data.service) {
        errors.push('Please select a service');
    }
    if (!data.message || data.message.length < 10) {
        errors.push('Please enter a message (minimum 10 characters)');
    }
    
    if (errors.length > 0) {
        showNotification(errors.join('<br>'), 'error');
        return false;
    }
    
    return true;
}

function submitContactForm(data) {
    var submitBtn = $('#submitBtn');
    var originalHtml = submitBtn.html();
    
    submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Sending...').prop('disabled', true);
    
    setTimeout(function() {
        submitBtn.html('<i class="fas fa-check"></i> Message Sent!');
        showNotification('Thank you! Your message has been sent successfully. We will get back to you soon!', 'success');
        
        $('#contactForm')[0].reset();
        
        if (data.service === 'cake-order') {
            setTimeout(function() {
                clearCart();
                showNotification('Order submitted! Your cart has been cleared.', 'info');
            }, 2000);
        }
        
        setTimeout(function() {
            submitBtn.html(originalHtml).prop('disabled', false);
        }, 3000);
    }, 2000);
}

// ===== NEWSLETTER =====
function initializeNewsletter() {
    $('#newsletterForm').submit(function(e) {
        e.preventDefault();
        
        var email = $('#newsletterEmail').val().trim();
        
        if (validateEmail(email)) {
            submitNewsletter(email);
        } else {
            showNotification('Please enter a valid email address.', 'error');
        }
    });
}

function submitNewsletter(email) {
    var form = $('#newsletterForm');
    var button = form.find('button');
    var originalHtml = button.html();
    
    button.html('<i class="fas fa-spinner fa-spin"></i>').prop('disabled', true);
    
    setTimeout(function() {
        showNotification('Thank you for subscribing to our newsletter!', 'success');
        $('#newsletterEmail').val('');
        button.html(originalHtml).prop('disabled', false);
    }, 1500);
}

// ===== ANIMATIONS =====
function initializeAnimations() {
    animateOnScroll();
    
    if ('IntersectionObserver' in window) {
        var observer = new IntersectionObserver(function(entries) {
            entries.forEach(function(entry) {
                if (entry.isIntersecting) {
                    entry.target.classList.add('fade-in-up');
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        });
        
        document.querySelectorAll('.product-card, .stat-item, .highlight-item, .info-row').forEach(function(el) {
            observer.observe(el);
        });
    }
}

function animateOnScroll() {
    $('.product-card, .stat-item, .highlight-item, .info-row').each(function() {
        if (isInViewport($(this))) {
            $(this).addClass('fade-in-up');
        }
    });
}

function isInViewport($element) {
    if (!$element.length) return false;
    
    var elementTop = $element.offset().top;
    var elementBottom = elementTop + $element.outerHeight();
    var viewportTop = $(window).scrollTop();
    var viewportBottom = viewportTop + $(window).height();
    
    return elementBottom > viewportTop && elementTop < viewportBottom - 100;
}

// ===== COUNTER ANIMATION =====
function animateCounters() {
    $('.stat-number').each(function() {
        var $counter = $(this);
        var target = parseInt($counter.attr('data-count'));
        var duration = 2000;
        var steps = 60;
        var increment = target / steps;
        var stepTime = duration / steps;
        var current = 0;
        
        var timer = setInterval(function() {
            current += increment;
            if (current >= target) {
                current = target;
                clearInterval(timer);
            }
            $counter.text(Math.floor(current));
        }, stepTime);
    });
}

// ===== SKILL BARS ANIMATION =====
function animateSkillBars() {
    $('.skills .line').each(function() {
        var $line = $(this);
        var progress = $line.data('progress');
        $line.css('--progress-width', progress + '%');
        $line.addClass('animated');
    });
}

// ===== NOTIFICATION SYSTEM =====
function showNotification(message, type, duration) {
    type = type || 'info';
    duration = duration || 5000;
    
    $('.notification-' + type).remove();
    
    var icons = {
        success: 'fa-check-circle',
        error: 'fa-exclamation-circle',
        info: 'fa-info-circle',
        warning: 'fa-exclamation-triangle'
    };
    
    var notification = $(
        '<div class="notification notification-' + type + '">' +
            '<i class="fas ' + icons[type] + '"></i>' +
            '<span>' + message + '</span>' +
            '<button class="notification-close">' +
                '<i class="fas fa-times"></i>' +
            '</button>' +
        '</div>'
    );
    
    $('#notificationContainer').append(notification);
    
    setTimeout(function() {
        notification.addClass('show');
    }, 100);
    
    var autoHideTimer = setTimeout(function() {
        hideNotification(notification);
    }, duration);
    
    notification.find('.notification-close').click(function() {
        clearTimeout(autoHideTimer);
        hideNotification(notification);
    });
    
    $('.notification').each(function(index) {
        $(this).css('top', (20 + (index * 80)) + 'px');
    });
}

function hideNotification($notification) {
    $notification.removeClass('show');
    setTimeout(function() {
        $notification.remove();
        $('.notification').each(function(index) {
            $(this).css('top', (20 + (index * 80)) + 'px');
        });
    }, 400);
}

// ===== UTILITY FUNCTIONS =====
function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

function truncateText(text, maxLength) {
    if (!text) return '';
    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
}

// ===== ERROR HANDLING =====
window.addEventListener('error', function(e) {
    console.error('JavaScript Error:', e.error);
    showNotification('Something went wrong. Please refresh the page if issues persist.', 'error');
});

window.addEventListener('unhandledrejection', function(e) {
    console.error('Unhandled Promise Rejection:', e.reason);
    showNotification('Connection error. Please check your internet connection.', 'warning');
});

// ===== EXPORT FUNCTIONS FOR GLOBAL ACCESS =====
window.showNotification = showNotification;
window.closeModal = closeModal;
window.addToCart = addToCart;
window.removeFromCart = removeFromCart;
window.openCart = openCart;
window.closeCart = closeCart;
window.clearCart = clearCart;
window.updateCartCounter = updateCartCounter;
window.AppState = AppState;

// ===== AUTO-LOAD PRODUCTS =====
$(document).ready(function() {
    console.log('Document ready - loading products...');
    setTimeout(function() {
        if (typeof window.loadDynamicProducts === 'function') {
            window.loadDynamicProducts();
        } else {
            console.log('Loading sample products as fallback');
            loadSampleProducts();
        }
    }, 500);
});

console.log('TEETEE FABULOUS JavaScript loaded successfully!');